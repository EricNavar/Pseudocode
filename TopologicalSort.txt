TopologicalSort()
{
    //sorted list will go in L
    List L
    Queue Q
    //if a vertex is in L it will also be in this set
    Set sortedVertices = {}

    for each vertex v in graph
        count incoming edges and save the values 
        if v has an in-degree of 0
            enqueue v to Q
    while Q is not empty
        dequeue a vertex v from Q
        append v to L
        add v to sortedVertices
        for each vertex u adjacent to v
            subtract 1 from incoming edges
            if incoming is now 0 
                add u to Q

    //if there is no circuit
    if sortedVertices contains all vertices in the graph
        return L
    else
        return null
}